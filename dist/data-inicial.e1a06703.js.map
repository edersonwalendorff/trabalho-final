{"version":3,"sources":["js/contagem-regressiva.js","js/data-inicial.js"],"names":["console","log","Countdown","futureDate","Date","_futureDate","getTime","_actualDate","Math","floor","_timeStampDiff","days","hours","minutes","seconds","tempoParaOWWB","tempos","document","querySelectorAll","mostrarTempo","forEach","tempo","index","innerHTML","total","setInterval"],"mappings":";AAoCO,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApCPA,QAAQC,IAAI,2BAESC,IAAAA,EAAAA,WACLC,SAAAA,EAAAA,GAAY,EAAA,KAAA,GACjBA,KAAAA,WAAaA,EAgCjB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cA9Be,IAAA,WACT,OAAA,IAAIC,OA6BV,CAAA,IAAA,cA3Be,IAAA,WACT,OAAA,IAAIA,KAAK,KAAKD,cA0BpB,CAAA,IAAA,iBAxBkB,IAAA,WACZ,OAAE,KAAKE,YAAYC,WAAe,KAAKC,YAAYD,YAuBzD,CAAA,IAAA,OArBQ,IAAA,WACFE,OAAAA,KAAKC,MAAM,KAAKC,eAAkB,SAoBxC,CAAA,IAAA,QAlBS,IAAA,WACHF,OAAAA,KAAKC,MAAM,KAAKC,eAAkB,QAiBxC,CAAA,IAAA,UAfW,IAAA,WACLF,OAAAA,KAAKC,MAAM,KAAKC,eAAkB,OAcxC,CAAA,IAAA,UAZW,IAAA,WACLF,OAAAA,KAAKC,MAAM,KAAKC,eAAiB,OAWvC,CAAA,IAAA,QATS,IAAA,WAQD,MAAA,CAPM,KAAKC,KAAO,GAAK,IAAM,KAAKA,KAAO,KAAKA,KAEnD,KAAKC,MAAQ,GAAK,GAAK,IAAO,KAAKA,MAAQ,GAAM,KAAKA,MAAQ,GAE9D,KAAKC,QAAU,GAAK,GAAK,IAAO,KAAKA,QAAU,GAAM,KAAKA,QAAU,GAEpE,KAAKC,QAAU,GAAK,GAAK,IAAO,KAAKA,QAAU,GAAM,KAAKA,QAAU,QAEvE,EAlCcZ,GAkCd,QAAA,QAAA;;ACvBP,aAXA,IAAA,EAAA,EAAA,QAAA,6BAWA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbAF,QAAQC,IAAI,gCAIZ,IAAMc,EAAgB,IAAIb,EAAJ,QAAc,qCAC9Bc,EAASC,SAASC,iBAAiB,eAEzC,SAASC,IACPH,EAAOI,QAAQ,SAACC,EAAOC,GACrBD,EAAME,UAAYR,EAAcS,OAAOF,KAG3CH,IACAM,YAAYN,EAAc","file":"data-inicial.e1a06703.js","sourceRoot":"..","sourcesContent":["console.log('Executando Contagem ...')\n\nexport default class Countdown {\n    constructor(futureDate) {\n      this.futureDate = futureDate;\n    }\n    get _actualDate() {\n      return new Date();\n    }\n    get _futureDate() {\n      return new Date(this.futureDate);\n    }\n    get _timeStampDiff() {\n      return +(this._futureDate.getTime()) - +(this._actualDate.getTime());\n    }\n    get days() {\n      return Math.floor(this._timeStampDiff / (24 * 60 * 60 * 1000));\n    }\n    get hours() {\n      return Math.floor(this._timeStampDiff / (60 * 60 * 1000));\n    }\n    get minutes() {\n      return Math.floor(this._timeStampDiff / (60 * 1000));\n    }\n    get seconds() {\n      return Math.floor(this._timeStampDiff / 1000);\n    }\n    get total() {\n        const days = this.days < 10 ? \"0\" + this.days : this.days;\n        const hours =\n          this.hours % 24 < 10 ? \"0\" + (this.hours % 24) : this.hours % 24;\n        const minutes =\n          this.minutes % 60 < 10 ? \"0\" + (this.minutes % 60) : this.minutes % 60;\n        const seconds =\n          this.seconds % 60 < 10 ? \"0\" + (this.seconds % 60) : this.seconds % 60;\n        return [days, hours, minutes, seconds];\n      }\n  }\n  ","console.log('Executando Contagem data ...')\n\nimport Countdown from \"./contagem-regressiva.js\";\n\nconst tempoParaOWWB = new Countdown(\"01 January 2023 00:01:00 GMT-0300\");\nconst tempos = document.querySelectorAll(\"[data-time]\");\n\nfunction mostrarTempo() {\n  tempos.forEach((tempo, index) => {\n    tempo.innerHTML = tempoParaOWWB.total[+index];\n  });\n}\nmostrarTempo();\nsetInterval(mostrarTempo, 1000);"]}